/*
  Copyright (c) 2014, Alexander W Blocker

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/* The code is modified by Benjamin Christoffersen */

#include "gaus-hermite.h"
#include <cmath>
#include <math.h>
#include <array>
#include <memory>

#include <Rconfig.h>
#include <R_ext/BLAS.h>
#ifndef FCLEN
#define FCLEN
#endif
#ifndef FCONE
#define FCONE
#endif
#include <R_ext/Lapack.h>

#ifdef _OPENMP
#include "omp.h"
#endif

namespace GaussHermite {
using std::vector;
using std::abs;

void buildHermiteJacobi(vector<double> &D, vector<double> &E){
  // Construct symmetric tridiagonal matrix similar to Jacobi matrix
  // for Hermite polynomials
  //
  // On exit, D contains diagonal elements of said matrix;
  // E contains subdiagonal elements.
  //
  // Need D of size n, E of size n-1
  //
  // Building matrix based on recursion relation for monic versions of Hermite
  // polynomials:
  //      p_n(x) = H_n(x) / 2^n
  //      p_n+1(x) + (B_n-x)*p_n(x) + A_n*p_n-1(x) = 0
  //      B_n = 0
  //      A_n = n/2
  //
  // Matrix similar to Jacobi (J) defined by:
  //      J_i,i = B_i-1, i = 1, ..., n
  //      J_i,i-1 = J_i-1,i = sqrt(A_i-1), i = 2, ..., n
  unsigned const n = D.size();
  for(unsigned i = 0; i < n; i++){
    // Build diagonal
    D[i] = 0.;
    // Build sub/super-diagonal
    E[i] = std::sqrt((i + 1.) / 2.);
  }
}

void quadInfoGolubWelsch
  (vector<double> &D, vector<double> &E, double const mu0,
   vector<double> &x, vector<double> &w) {
  // Compute weights & nodes for Gaussian quadrature using Golub-Welsch
  // algorithm.
  //
  // First need to build symmetric tridiagonal matrix J similar to Jacobi for
  // desired orthogonal polynomial (based on recurrence relation).
  //
  // D contains the diagonal of this matrix J, and E contains the
  // sub/super-diagonal.
  //
  // This routine finds the eigenvectors & values of the given J matrix.
  //
  // The eigenvalues correspond to the nodes for the desired quadrature rule
  // (roots of the orthogonal polynomial).
  //
  // The eigenvectors can be used to compute the weights for the quadrature rule
  // via:
  //
  //      w_j = mu0 * (v_j,1)^2
  //
  // where mu0 = \int_a^b w(x) dx
  // (integral over range of integration of weight function)
  //
  // and
  //
  // v_j,1 is the first entry of the jth normalized (to unit length)
  // eigenvector.
  //
  // On exit, x (length n) contains nodes for quadrature rule, and w (length n)
  // contains weights for quadrature rule.
  //
  // Note that contents of D & E are destroyed on exit
  //

  // Setup for eigenvalue computations
  char JOBZ = 'V';  // Flag to compute both eigenvalues & vectors.
  int INFO;
  int const n = x.size();
  vector<double> WORK(2 * n - 2);
  vector<double> Z(n * n);  // This holds the resulting eigenvectors.

  // Run eigen decomposition
  F77_NAME(dstev)(&JOBZ, &n, &D[0], &E[0],  // Job flag & input matrix
                  &Z[0], &n,       // Output array for eigenvectors & dim
                  &WORK[0], &INFO  // Workspace & info flag
                  FCONE);

  // Setup x & w
  for (int i = 0; i < n; i++) {
    x[i] = D[i];
    w[i] = mu0 * Z[i * n] * Z[i * n];
  }
}

int gaussHermiteDataGolubWelsch(vector<double> &x, vector<double> &w) {
  //
  // Calculates nodes & weights for Gauss-Hermite integration of order n
  //
  // Need x & w of same size n
  //
  // Using standard formulation (no generalizations or polynomial adjustment)
  //
  // Evaluations use Golub-Welsch algorithm; numerically stable for n>=100
  //
  // Build Jacobi-similar symmetric tridiagonal matrix via diagonal &
  // sub-diagonal
  unsigned const n = x.size();
  vector<double> D(n), E(n);
  buildHermiteJacobi(D, E);

  // Get nodes & weights
  double const mu0 = sqrt(M_PI);
  quadInfoGolubWelsch(D, E, mu0, x, w);

  return 0;
}

/* pre-computed values */
/*
 library(fastGHQuad)
 ns <- 1:30
 dat <- lapply(ns, fastGHQuad::gaussHermiteData)
 . <- function(eles, n_ele, l)
 cat(sprintf("GH%s%-2d[%2d] = {", l, n_ele, n_ele),
 paste0(sprintf("%.20e", eles), collapse = ", "),
 "},\n", sep = " ")
 for(x in dat){
 .(x$x, length(x$x), "x")
 .(x$w, length(x$w), "w")
 }
 paste("{", paste0(sprintf("GHx%-2d", ns), collapse = ", "), "}")
 paste("{", paste0(sprintf("GHw%-2d", ns), collapse = ", "), "}")
 */

constexpr size_t const n_pre_comp = 30L;

constexpr double const
    GHx1 [ 1] = { 0.00000000000000000000e+00 },
    GHw1 [ 1] = { 1.77245385090551588192e+00 },
    GHx2 [ 2] = { -7.07106781186547572737e-01, 7.07106781186547572737e-01 },
    GHw2 [ 2] = { 8.86226925452757829937e-01, 8.86226925452757829937e-01 },
    GHx3 [ 3] = { -1.22474487139158871862e+00, -1.46354448532132483356e-16, 1.22474487139158916271e+00 },
    GHw3 [ 3] = { 2.95408975150919517194e-01, 1.18163590060367762469e+00, 2.95408975150919628216e-01 },
    GHx4 [ 4] = { -1.65068012388578422289e+00, -5.24647623275290353462e-01, 5.24647623275290464484e-01, 1.65068012388578422289e+00 },
    GHw4 [ 4] = { 8.13128354472451297941e-02, 8.04914090005512727899e-01, 8.04914090005512172787e-01, 8.13128354472452963275e-02 },
    GHx5 [ 5] = { -2.02018287045608557762e+00, -9.58572464613818731038e-01, 2.73349801485409356368e-17, 9.58572464613818731038e-01, 2.02018287045608557762e+00 },
    GHw5 [ 5] = { 1.99532420590458788034e-02, 3.93619323152241074038e-01, 9.45308720482941344798e-01, 3.93619323152241351593e-01, 1.99532420590459239063e-02 },
    GHx6 [ 6] = { -2.35060497367449139361e+00, -1.33584907401369701319e+00, -4.36077411927616565013e-01, 4.36077411927616620524e-01, 1.33584907401369701319e+00, 2.35060497367449183770e+00 },
    GHw6 [ 6] = { 4.53000990550886557806e-03, 1.57067320322856335268e-01, 7.24629595224392186736e-01, 7.24629595224392186736e-01, 1.57067320322856363024e-01, 4.53000990550883435304e-03 },
    GHx7 [ 7] = { -2.65196135683523159798e+00, -1.67355162876747143308e+00, -8.16287882858964808364e-01, 8.15487421110397736136e-17, 8.16287882858964253252e-01, 1.67355162876747143308e+00, 2.65196135683523293025e+00 },
    GHw7 [ 7] = { 9.71781245099518058844e-04, 5.45155828191270785954e-02, 4.25607252610127773096e-01, 8.10264617556806898691e-01, 4.25607252610128106163e-01, 5.45155828191269190008e-02, 9.71781245099513722036e-04 },
    GHx8 [ 8] = { -2.93063742025724360829e+00, -1.98165675669584429031e+00, -1.15719371244678037591e+00, -3.81186990207322162760e-01, 3.81186990207322107249e-01, 1.15719371244678104205e+00, 1.98165675669584362417e+00, 2.93063742025724405238e+00 },
    GHw8 [ 8] = { 1.99604072211368783378e-04, 1.70779830074134011952e-02, 2.07802325814891886147e-01, 6.61147012558240820823e-01, 6.61147012558240709801e-01, 2.07802325814891830635e-01, 1.70779830074134636453e-02, 1.99604072211368024437e-04 },
    GHx9 [ 9] = { -3.19099320178152945360e+00, -2.26658058453184274583e+00, -1.46855328921666816733e+00, -7.23551018752837671322e-01, -4.02438494023542067404e-17, 7.23551018752837449277e-01, 1.46855328921666794528e+00, 2.26658058453184318992e+00, 3.19099320178152900951e+00 },
    GHw9 [ 9] = { 3.96069772632643579300e-05, 4.94362427553694718657e-03, 8.84745273943765841995e-02, 4.32651559002555696765e-01, 7.20235215606050971360e-01, 4.32651559002555918809e-01, 8.84745273943767646108e-02, 4.94362427553693591087e-03, 3.96069772632642698386e-05 },
    GHx10[10] = { -3.43615911883773783586e+00, -2.53273167423279010890e+00, -1.75668364929988163325e+00, -1.03661082978951379907e+00, -3.42901327223704810443e-01, 3.42901327223704699421e-01, 1.03661082978951357703e+00, 1.75668364929988207734e+00, 2.53273167423279010890e+00, 3.43615911883773694768e+00 },
    GHw10[10] = { 7.64043285523259525305e-06, 1.34364574678123870934e-03, 3.38743944554811271530e-02, 2.40138611082314379352e-01, 6.10862633735326232554e-01, 6.10862633735325566420e-01, 2.40138611082314601397e-01, 3.38743944554810300085e-02, 1.34364574678123567357e-03, 7.64043285523264607503e-06 },
    GHx11[11] = { -3.66847084655958122212e+00, -2.78329009978165142769e+00, -2.02594801582575501087e+00, -1.32655708449493259238e+00, -6.56809566882099793439e-01, 2.50185338164225497158e-16, 6.56809566882099793439e-01, 1.32655708449493281442e+00, 2.02594801582575501087e+00, 2.78329009978165053951e+00, 3.66847084655958077803e+00 },
    GHw11[11] = { 1.43956039371425984845e-06, 3.46819466323345499108e-04, 1.19113954449115259926e-02, 1.17227875167708175952e-01, 4.29359752356124890760e-01, 6.54759286914591287498e-01, 4.29359752356125001782e-01, 1.17227875167708495141e-01, 1.19113954449114999717e-02, 3.46819466323345011217e-04, 1.43956039371425582505e-06 },
    GHx12[12] = { -3.88972489786978137261e+00, -3.02063702512088960717e+00, -2.27950708050105932401e+00, -1.59768263515260433572e+00, -9.47788391240163674567e-01, -3.14240376254359077279e-01, 3.14240376254359077279e-01, 9.47788391240163674567e-01, 1.59768263515260433572e+00, 2.27950708050105976810e+00, 3.02063702512088960717e+00, 3.88972489786978048443e+00 },
    GHw12[12] = { 2.65855168435630812872e-07, 8.57368704358780998540e-05, 3.90539058462906337951e-03, 5.16079856158840125091e-02, 2.60492310264161308631e-01, 5.70135236262479971892e-01, 5.70135236262479749847e-01, 2.60492310264160975564e-01, 5.16079856158839084257e-02, 3.90539058462905947638e-03, 8.57368704358788859005e-05, 2.65855168435630812872e-07 },
    GHx13[13] = { -4.10133759617863891123e+00, -3.24660897837240902675e+00, -2.51973568567823891229e+00, -1.85310765160151214026e+00, -1.22005503659074832079e+00, -6.05763879171060337647e-01, 1.48984508284312218873e-16, 6.05763879171059893558e-01, 1.22005503659074765466e+00, 1.85310765160151169617e+00, 2.51973568567823758002e+00, 3.24660897837240858266e+00, 4.10133759617864157576e+00 },
    GHw13[13] = { 4.82573185007312910705e-08, 2.04303604027070770789e-05, 1.20745999271938339592e-03, 2.08627752961699393375e-02, 1.40323320687023300746e-01, 4.21616296898542963767e-01, 6.04393187921162255982e-01, 4.21616296898542630700e-01, 1.40323320687023467279e-01, 2.08627752961700226042e-02, 1.20745999271938881693e-03, 2.04303604027071414534e-05, 4.82573185007312910705e-08 },
    GHx14[14] = { -4.30444857047363349523e+00, -3.46265693360227011510e+00, -2.74847072498540168084e+00, -2.09518325850771658381e+00, -1.47668273114114056987e+00, -8.78713787329399309556e-01, -2.91745510672561991772e-01, 2.91745510672562269328e-01, 8.78713787329399642623e-01, 1.47668273114114056987e+00, 2.09518325850771613972e+00, 2.74847072498540212493e+00, 3.46265693360226967101e+00, 4.30444857047363438340e+00 },
    GHw14[14] = { 8.62859116812515866324e-09, 4.71648435501894618843e-06, 3.55092613551923075039e-04, 7.85005472645790638997e-03, 6.85055342234652947520e-02, 2.73105609064246468431e-01, 5.36405909712090345209e-01, 5.36405909712090456232e-01, 2.73105609064246745987e-01, 6.85055342234654057743e-02, 7.85005472645796884001e-03, 3.55092613551924809762e-04, 4.71648435501892501260e-06, 8.62859116812508256262e-09 },
    GHx15[15] = { -4.49999070730939099150e+00, -3.66995037340445406926e+00, -2.96716692790560276904e+00, -2.32573248617385797132e+00, -1.71999257518648884790e+00, -1.13611558521092037566e+00, -5.65069583255575880187e-01, -3.84143836181875762674e-16, 5.65069583255575547120e-01, 1.13611558521091993157e+00, 1.71999257518648929199e+00, 2.32573248617385797132e+00, 2.96716692790560276904e+00, 3.66995037340445273699e+00, 4.49999070730939099150e+00 },
    GHw15[15] = { 1.52247580425352153300e-09, 1.05911554771106098859e-06, 1.00004441232499715242e-04, 2.77806884291275941329e-03, 3.07800338725461065936e-02, 1.58488915795935797481e-01, 4.12028687498898260611e-01, 5.64100308726418031569e-01, 4.12028687498898260611e-01, 1.58488915795935492170e-01, 3.07800338725460406741e-02, 2.77806884291277676052e-03, 1.00004441232499891425e-04, 1.05911554771106818837e-06, 1.52247580425351822428e-09 },
    GHx16[16] = { -4.68873893930582230638e+00, -3.86944790486012379915e+00, -3.17699916197995291256e+00, -2.54620215784747960797e+00, -1.95178799091625276851e+00, -1.38025853919888152888e+00, -8.22951449144655455825e-01, -2.73481046138152439351e-01, 2.73481046138152106284e-01, 8.22951449144656344004e-01, 1.38025853919887975252e+00, 1.95178799091625321260e+00, 2.54620215784747960797e+00, 3.17699916197995513301e+00, 3.86944790486012291097e+00, 4.68873893930582053002e+00 },
    GHw16[16] = { 2.65480747401119675172e-10, 2.32098084486520906938e-07, 2.71186009253789326093e-05, 9.32284008624182335134e-04, 1.28803115355099855044e-02, 8.38100413989859710506e-02, 2.80647458528533899624e-01, 5.07929479016613560916e-01, 5.07929479016613782960e-01, 2.80647458528533733091e-01, 8.38100413989859432951e-02, 1.28803115355099178502e-02, 9.32284008624179841469e-04, 2.71186009253785734673e-05, 2.32098084486520853999e-07, 2.65480747401118537799e-10 },
    GHx17[17] = { -4.87134519367440610438e+00, -4.06194667587547719734e+00, -3.37893209114149462025e+00, -2.75776291570388965013e+00, -2.17350282666662142361e+00, -1.61292431422123105911e+00, -1.06764872574345082157e+00, -5.31633001342654787358e-01, 3.92660474520813856286e-16, 5.31633001342654787358e-01, 1.06764872574345126566e+00, 1.61292431422123172524e+00, 2.17350282666662009134e+00, 2.75776291570389009422e+00, 3.37893209114149373207e+00, 4.06194667587547897369e+00, 4.87134519367440432802e+00 },
    GHw17[17] = { 4.58057893079865035816e-11, 4.97707898163073945654e-08, 7.11228914002127795700e-06, 2.98643286697752093507e-04, 5.06734995762754200643e-03, 4.09200341497563055415e-02, 1.72648297670097372603e-01, 4.01826469470411729024e-01, 5.30917937624864610946e-01, 4.01826469470411673512e-01, 1.72648297670097511380e-01, 4.09200341497561945192e-02, 5.06734995762753073073e-03, 2.98643286697751497195e-04, 7.11228914002132454382e-06, 4.97707898163076327934e-08, 4.58057893079866457533e-11 },
    GHx18[18] = { -5.04836400887446679064e+00, -4.24811787356812597949e+00, -3.57376906848626552105e+00, -2.96137750553160516986e+00, -2.38629908916668576069e+00, -1.83553160426162942365e+00, -1.30092085838961724065e+00, -7.76682919267411731035e-01, -2.58267750519096894735e-01, 2.58267750519096839223e-01, 7.76682919267411953079e-01, 1.30092085838961812883e+00, 1.83553160426162720320e+00, 2.38629908916668531660e+00, 2.96137750553160516986e+00, 3.57376906848626463287e+00, 4.24811787356812509131e+00, 5.04836400887446679064e+00 },
    GHw18[18] = { 7.82819977211582070581e-12, 1.04672057957919764970e-08, 1.81065448109342501404e-06, 9.18112686792945710285e-05, 1.88852263026841591699e-03, 1.86400423875446516475e-02, 9.73017476413154530634e-02, 2.84807285669979537435e-01, 4.83495694725456004459e-01, 4.83495694725455782415e-01, 2.84807285669979370901e-01, 9.73017476413154808190e-02, 1.86400423875446620559e-02, 1.88852263026842263904e-03, 9.18112686792942728729e-05, 1.81065448109343200206e-06, 1.04672057957919632621e-08, 7.82819977211570761471e-12 },
    GHx19[19] = { -5.22027169053748441030e+00, -4.42853280660377990330e+00, -3.76218735196402009890e+00, -3.15784881834760344788e+00, -2.59113378979454234141e+00, -2.04923170985061808835e+00, -1.52417061939353271072e+00, -1.01036838713431142978e+00, -5.03520163423888278409e-01, -9.75022669146958680708e-17, 5.03520163423888056364e-01, 1.01036838713431187387e+00, 1.52417061939353271072e+00, 2.04923170985062030880e+00, 2.59113378979454367368e+00, 3.15784881834760078334e+00, 3.76218735196402098708e+00, 4.42853280660378079148e+00, 5.22027169053748174576e+00 },
    GHw19[19] = { 1.32629709449851045699e-12, 2.16305100986355453375e-09, 4.48824314722314436610e-07, 2.72091977631616476895e-05, 6.70877521407184417360e-04, 7.98886677772298915701e-03, 5.08103869090521242935e-02, 1.83632701306997020430e-01, 3.91608988613029673775e-01, 5.02974888276186193892e-01, 3.91608988613030117865e-01, 1.83632701306996742874e-01, 5.08103869090522214380e-02, 7.98886677772298221811e-03, 6.70877521407181490014e-04, 2.72091977631617357809e-05, 4.48824314722307448588e-07, 2.16305100986355784247e-09, 1.32629709449851308232e-12 },
    GHx20[20] = { -5.38748089001123187103e+00, -4.60368244955074512603e+00, -3.94476404011562653551e+00, -3.34785456738321718362e+00, -2.78880605842813134032e+00, -2.25497400208927611942e+00, -1.73853771211658569840e+00, -1.23407621539532308397e+00, -7.37473728545394058287e-01, -2.45340708300901322314e-01, 2.45340708300901377825e-01, 7.37473728545394502376e-01, 1.23407621539532286192e+00, 1.73853771211658569840e+00, 2.25497400208927611942e+00, 2.78880605842813045214e+00, 3.34785456738321718362e+00, 3.94476404011562520324e+00, 4.60368244955074334968e+00, 5.38748089001123187103e+00 },
    GHw20[20] = { 2.22939364553413890435e-13, 4.39934099227314474013e-10, 1.08606937076927437098e-07, 7.80255647853207850713e-06, 2.28338636016353049765e-04, 3.24377334223785321679e-03, 2.48105208874636537497e-02, 1.09017206020023169066e-01, 2.86675505362834259770e-01, 4.62243669600610140868e-01, 4.62243669600609918824e-01, 2.86675505362834703860e-01, 1.09017206020023085800e-01, 2.48105208874636190552e-02, 3.24377334223784887998e-03, 2.28338636016354676068e-04, 7.80255647853212424691e-06, 1.08606937076928059138e-07, 4.39934099227317886133e-10, 2.22939364553414142870e-13 },
    GHx21[21] = { -5.55035187326467926994e+00, -4.77399234341122014058e+00, -4.12199554749183860736e+00, -3.53197287713767904549e+00, -2.97999120770459846597e+00, -2.45355212451283621888e+00, -1.94496294918625300951e+00, -1.44893425065073233604e+00, -9.61499634418369164557e-01, -4.79450707079107529829e-01, -2.43841792390644361043e-16, 4.79450707079107973918e-01, 9.61499634418369164557e-01, 1.44893425065073189195e+00, 1.94496294918625323156e+00, 2.45355212451283710706e+00, 2.97999120770460024232e+00, 3.53197287713767726913e+00, 4.12199554749184127189e+00, 4.77399234341122102876e+00, 5.55035187326467926994e+00 },
    GHw21[21] = { 3.72036507013598802911e-14, 8.81861124204990989835e-11, 2.57123018005934582199e-08, 2.17188489805667409735e-06, 7.47839886731009129226e-05, 1.25498204172641006013e-03, 1.14140658374343867409e-02, 6.01796466589123307811e-02, 1.92120324066997971713e-01, 3.81669073613501441677e-01, 4.79023703120177613002e-01, 3.81669073613502662923e-01, 1.92120324066997971713e-01, 6.01796466589124348645e-02, 1.14140658374343399034e-02, 1.25498204172641049381e-03, 7.47839886731007773973e-05, 2.17188489805668002658e-06, 2.57123018005931637436e-08, 8.81861124204989826613e-11, 3.72036507013605871105e-14 },
    GHx22[22] = { -5.70920135320526611622e+00, -4.93983413106017721361e+00, -4.29431248059315961996e+00, -3.71070153287780568618e+00, -3.16526590920213646285e+00, -2.64563744105817244545e+00, -2.14423359279853409376e+00, -1.65587437328642272938e+00, -1.17671395848124404893e+00, -7.03686097170006741308e-01, -2.34179139930990459773e-01, 2.34179139930990654062e-01, 7.03686097170006963353e-01, 1.17671395848124427097e+00, 1.65587437328642295142e+00, 2.14423359279853364967e+00, 2.64563744105817288954e+00, 3.16526590920213690694e+00, 3.71070153287780390983e+00, 4.29431248059316050814e+00, 4.93983413106017898997e+00, 5.70920135320526611622e+00 },
    GHw22[22] = { 6.16718342440401433812e-15, 1.74433900754797741420e-11, 5.96699098605965603482e-09, 5.88428756330094003165e-07, 2.36551285525104433593e-05, 4.64885050884250377538e-04, 4.97839933505165796457e-03, 3.11403708844239478226e-02, 1.19102360958782502176e-01, 2.86971433246907103864e-01, 4.43545226434958306250e-01, 4.43545226434959305450e-01, 2.86971433246907547954e-01, 1.19102360958782807487e-01, 3.11403708844238957809e-02, 4.97839933505166837291e-03, 4.64885050884252166471e-04, 2.36551285525106026015e-05, 5.88428756330099403000e-07, 5.96699098605966182509e-09, 1.74433900754798193785e-11, 6.16718342440405299231e-15 },
    GHx23[23] = { -5.86430949898457321012e+00, -5.10153461047667544648e+00, -4.46209117374000641121e+00, -3.88447270810610012504e+00, -3.34512715994122578067e+00, -2.83180378712615743453e+00, -2.33701621147445504079e+00, -1.85567703767137115456e+00, -1.38403958568249474403e+00, -9.19151465442563431196e-01, -4.58538350068104727519e-01, -1.86522787198184591174e-16, 4.58538350068104838542e-01, 9.19151465442563986308e-01, 1.38403958568249518812e+00, 1.85567703767137071047e+00, 2.33701621147445548488e+00, 2.83180378712615699044e+00, 3.34512715994122400431e+00, 3.88447270810610145730e+00, 4.46209117374000641121e+00, 5.10153461047667633466e+00, 5.86430949898457321012e+00 },
    GHw23[23] = { 1.01603846206367602390e-15, 3.40831409803057826920e-12, 1.35962965040288687892e-09, 1.55533932914577564477e-07, 7.24929591800227259496e-06, 1.65561699141874408376e-04, 2.06956787496064519016e-03, 1.52070840044842576361e-02, 6.88902894290872591654e-02, 1.98644898578022782720e-01, 3.72143824877564144415e-01, 4.58196585593212801779e-01, 3.72143824877564644016e-01, 1.98644898578022921498e-01, 6.88902894290872869210e-02, 1.52070840044841257971e-02, 2.06956787496064822593e-03, 1.65561699141875004688e-04, 7.24929591800229038265e-06, 1.55533932914576532155e-07, 1.35962965040288687892e-09, 3.40831409803054999642e-12, 1.01603846206367010745e-15 },
    GHx24[24] = { -6.01592556142573453570e+00, -5.25938292766804504907e+00, -4.62566275642378599287e+00, -4.05366440244815162686e+00, -3.52000681303452456206e+00, -3.01254613756556377524e+00, -2.52388101701142764099e+00, -2.04900357366170071671e+00, -1.58425001096169371095e+00, -1.12676081761124446956e+00, -6.74171107037212058444e-01, -2.24414547472515490956e-01, 2.24414547472515546467e-01, 6.74171107037212280488e-01, 1.12676081761124446956e+00, 1.58425001096169504322e+00, 2.04900357366169849627e+00, 2.52388101701142764099e+00, 3.01254613756556377524e+00, 3.52000681303452500615e+00, 4.05366440244815073868e+00, 4.62566275642378776922e+00, 5.25938292766804327272e+00, 6.01592556142573453570e+00 },
    GHw24[24] = { 1.66436849648911783079e-16, 6.58462024307813366147e-13, 3.04625426998760355874e-10, 4.01897117494141091181e-08, 2.15824570490233162568e-06, 5.68869163640442672154e-05, 8.23692482688416580811e-04, 7.04835581007266179926e-03, 3.74454705032306878199e-02, 1.27739621784559054252e-01, 2.86179535346443025823e-01, 4.26931163868699503627e-01, 4.26931163868699059538e-01, 2.86179535346443081334e-01, 1.27739621784559054252e-01, 3.74454705032307988422e-02, 7.04835581007269302428e-03, 8.23692482688417339752e-04, 5.68869163640439555072e-05, 2.15824570490233840194e-06, 4.01897117494139172122e-08, 3.04625426998758443018e-10, 6.58462024307814678811e-13, 1.66436849648912226814e-16 },
    GHx25[25] = { -6.16427243405244773555e+00, -5.41363635528003683817e+00, -4.78532036735222288115e+00, -4.21860944438656115807e+00, -3.69028287699835555458e+00, -3.18829492442510620265e+00, -2.70532023717302738675e+00, -2.23642013026727992653e+00, -1.77800112433714785354e+00, -1.32728070207308412876e+00, -8.81982756213821716962e-01, -4.40147298645308382437e-01, 3.05275368255625897950e-16, 4.40147298645308993059e-01, 8.81982756213821827984e-01, 1.32728070207308390671e+00, 1.77800112433714607718e+00, 2.23642013026728125880e+00, 2.70532023717302738675e+00, 3.18829492442510309402e+00, 3.69028287699835511049e+00, 4.21860944438656293443e+00, 4.78532036735222554569e+00, 5.41363635528003506181e+00, 6.16427243405245484098e+00 },
    GHw25[25] = { 2.71192351403843858926e-17, 1.25881498774650690715e-13, 6.71963841770629000645e-11, 1.01703825030184752765e-08, 6.25703249969108001870e-07, 1.89159729573405638650e-05, 3.15083638745483824491e-04, 3.11570872012563839307e-03, 1.92430989654089092122e-02, 7.68889951758088829870e-02, 2.03621136678123981767e-01, 3.63088989275890949848e-01, 4.39868722169485526496e-01, 3.63088989275889562069e-01, 2.03621136678123870745e-01, 7.68889951758088829870e-02, 1.92430989654089196206e-02, 3.11570872012562494896e-03, 3.15083638745483336600e-04, 1.89159729573406350158e-05, 6.25703249969103554947e-07, 1.01703825030183528537e-08, 6.71963841770607933389e-11, 1.25881498774653189826e-13, 2.71192351403838127358e-17 },
    GHx26[26] = { -6.30955038562569381355e+00, -5.56452498195010392124e+00, -4.94132495724137932314e+00, -4.37960266298330314072e+00, -3.85628841990914850157e+00, -3.35942718235083015443e+00, -2.88176221954308786621e+00, -2.41841576477377939725e+00, -1.96585478564113635969e+00, -1.52136151665192054239e+00, -1.08273301107788344488e+00, -6.48095213993448049372e-01, -2.15777856243463211916e-01, 2.15777856243463711516e-01, 6.48095213993448493461e-01, 1.08273301107788300079e+00, 1.52136151665192054239e+00, 1.96585478564113680378e+00, 2.41841576477377939725e+00, 2.88176221954308564577e+00, 3.35942718235082971034e+00, 3.85628841990915027793e+00, 4.37960266298330314072e+00, 4.94132495724137932314e+00, 5.56452498195010303306e+00, 6.30955038562569558991e+00 },
    GHw26[26] = { 4.39691609475388354080e-18, 2.38314865937212305015e-14, 1.46099993398161236565e-11, 2.52449403449050236144e-09, 1.77010633739733872183e-07, 6.10329171739599806226e-06, 1.16229701603109419222e-04, 1.31906472232385958004e-03, 9.39790129115954109285e-03, 4.35982272172508455998e-02, 1.35113327911787955982e-01, 2.84632241176784706038e-01, 4.12043650590369292530e-01, 4.12043650590369292530e-01, 2.84632241176784095416e-01, 1.35113327911787872715e-01, 4.35982272172509843777e-02, 9.39790129115951680672e-03, 1.31906472232385741164e-03, 1.16229701603109663167e-04, 6.10329171739604464908e-06, 1.77010633739734057471e-07, 2.52449403449056770871e-09, 1.46099993398160267212e-11, 2.38314865937217921704e-14, 4.39691609475384425183e-18 },
    GHx27[27] = { -6.45194014075347599402e+00, -5.71225555281652841444e+00, -5.09391000311318276061e+00, -4.53690666337244419282e+00, -4.01831867040873813579e+00, -3.52627534013435361970e+00, -3.05358241982225475653e+00, -2.59541633891082046404e+00, -2.14829664536162701083e+00, -1.70956073926033691457e+00, -1.27706681733985782934e+00, -8.49011342060103091356e-01, -4.23807900543853199871e-01, -2.51155318851605804782e-16, 4.23807900543853033337e-01, 8.49011342060102980334e-01, 1.27706681733985716320e+00, 1.70956073926033691457e+00, 2.14829664536162878719e+00, 2.59541633891081913177e+00, 3.05358241982225653288e+00, 3.52627534013435361970e+00, 4.01831867040873724761e+00, 4.53690666337244241646e+00, 5.09391000311317920790e+00, 5.71225555281653107897e+00, 6.45194014075347865855e+00 },
    GHw27[27] = { 7.09577929705129856156e-19, 4.47077245739317780295e-15, 3.13411761362303360628e-12, 6.15503157823173827904e-10, 4.89540040969953879886e-08, 1.91528090059530816649e-06, 4.14675800438413626474e-05, 5.36769615688113322684e-04, 4.38127983579256197189e-03, 2.34159336253419551876e-02, 8.41730810840521509464e-02, 2.07370480751009361731e-01, 3.54517304099754015922e-01, 4.23577288015058894821e-01, 3.54517304099753405300e-01, 2.07370480751009222953e-01, 8.41730810840520121685e-02, 2.34159336253418476348e-02, 4.38127983579253074686e-03, 5.36769615688114081625e-04, 4.14675800438413219898e-05, 1.91528090059528741419e-06, 4.89540040969958048876e-08, 6.15503157823167830844e-10, 3.13411761362306955309e-12, 4.47077245739307603990e-15, 7.09577929705130530231e-19 },
    GHx28[28] = { -6.59160544236774903482e+00, -5.85701464138284855210e+00, -5.24328537320293630586e+00, -4.69075652394311415350e+00, -4.17663674212926672169e+00, -3.68913423846167942699e+00, -3.22111207656145648315e+00, -2.76779535291359390925e+00, -2.32574984265644202353e+00, -1.89236049683768414731e+00, -1.46553726345740931158e+00, -1.04353527375420851442e+00, -6.24836719505209026160e-01, -2.08067382690736490947e-01, 2.08067382690736935036e-01, 6.24836719505209359227e-01, 1.04353527375420740420e+00, 1.46553726345740797932e+00, 1.89236049683768592367e+00, 2.32574984265644246761e+00, 2.76779535291359390925e+00, 3.22111207656145337452e+00, 3.68913423846167987108e+00, 4.17663674212926672169e+00, 4.69075652394311681803e+00, 5.24328537320293452950e+00, 5.85701464138284944028e+00, 6.59160544236774281757e+00 },
    GHw28[28] = { 1.14013934790366563752e-19, 8.31593795120679721093e-16, 6.63943671490956657322e-13, 1.47585316827770432678e-10, 1.32568250154171722438e-08, 5.85771972099300468512e-07, 1.43455042297143860061e-05, 2.10618100024033199844e-04, 1.95733129440897341694e-03, 1.19684232143548140159e-02, 4.95148892898982923017e-02, 1.41394609786954950081e-01, 2.82561391259388783315e-01, 3.98604717826451127038e-01, 3.98604717826451404594e-01, 2.82561391259388228203e-01, 1.41394609786954755792e-01, 4.95148892898981882182e-02, 1.19684232143548313632e-02, 1.95733129440898295792e-03, 2.10618100024033118528e-04, 1.43455042297145300017e-05, 5.85771972099298774446e-07, 1.32568250154172433814e-08, 1.47585316827766270926e-10, 6.63943671490962715774e-13, 8.31593795120660591216e-16, 1.14013934790364324858e-19 },
    GHx29[29] = { -6.72869519860884679474e+00, -5.99897128946381474890e+00, -5.38964052196675158513e+00, -4.84136365105916155471e+00, -4.33147829381915450142e+00, -3.84826679221361978023e+00, -3.38464514109221070726e+00, -2.93588250429012687093e+00, -2.49858569101940419799e+00, -2.07018107605342738253e+00, -1.64862291389231652161e+00, -1.23221575508475300609e+00, -8.19498681270911855101e-01, -4.09164636394928948881e-01, 6.19130467804096096262e-17, 4.09164636394928615815e-01, 8.19498681270911966124e-01, 1.23221575508475345018e+00, 1.64862291389231629957e+00, 2.07018107605342827071e+00, 2.49858569101940330981e+00, 2.93588250429012731502e+00, 3.38464514109221115135e+00, 3.84826679221362066841e+00, 4.33147829381915450142e+00, 4.84136365105916333107e+00, 5.38964052196675336148e+00, 5.99897128946381208436e+00, 6.72869519860884413021e+00 },
    GHw29[29] = { 1.82446085276723510264e-20, 1.53450044460536706205e-16, 1.39010727144962576393e-13, 3.48413016130850936697e-11, 3.52031232760067955781e-09, 1.74922912994994709720e-07, 4.82307349764778997461e-06, 7.99092035452183830756e-05, 8.40792506140259623612e-04, 5.84550354527149738232e-03, 2.76396555920237277371e-02, 9.07688422155780855194e-02, 2.10142694449210326590e-01, 3.46418939071670040075e-01, 4.08971174635230139138e-01, 3.46418939071669818031e-01, 2.10142694449210465368e-01, 9.07688422155782936862e-02, 2.76396555920237138593e-02, 5.84550354527150865802e-03, 8.40792506140259298351e-04, 7.99092035452179358422e-05, 4.82307349764774931703e-06, 1.74922912994992142151e-07, 3.52031232760069155193e-09, 3.48413016130843763490e-11, 1.39010727144962753098e-13, 1.53450044460536287123e-16, 1.82446085276725135267e-20 },
    GHx30[30] = { -6.86334529352989441975e+00, -6.13827922012393667472e+00, -5.53314715156749414859e+00, -4.98891896858994154940e+00, -4.48305535709251490317e+00, -4.00390860386122859893e+00, -3.54444387315534870098e+00, -3.09997052958644125908e+00, -2.66713212453561743231e+00, -2.24339146776150633045e+00, -1.82674114360368800014e+00, -1.41552780019818857937e+00, -1.00833827104672346664e+00, -6.03921058625552342747e-01, -2.01128576548871090823e-01, 2.01128576548871673690e-01, 6.03921058625552786836e-01, 1.00833827104672346664e+00, 1.41552780019818902346e+00, 1.82674114360368800014e+00, 2.24339146776150499818e+00, 2.66713212453561698823e+00, 3.09997052958644170317e+00, 3.54444387315535003324e+00, 4.00390860386123126347e+00, 4.48305535709251756771e+00, 4.98891896858994599029e+00, 5.53314715156749237224e+00, 6.13827922012393489837e+00, 6.86334529352989353157e+00 },
    GHw30[30] = { 2.90825470013120677873e-21, 2.81033360275085919285e-17, 2.87860708054874145041e-14, 8.10618629746297617412e-12, 9.17858042437864869423e-10, 5.10852245077593488150e-08, 1.57909488732471456019e-06, 2.93872522892299684722e-05, 3.48310124318683010571e-04, 2.73792247306765650083e-03, 1.47038297048266985989e-02, 5.51441768702340823216e-02, 1.46735847540890002039e-01, 2.80130930839212699546e-01, 3.86394889541814112732e-01, 3.86394889541813779665e-01, 2.80130930839212644035e-01, 1.46735847540890390617e-01, 5.51441768702343182440e-02, 1.47038297048267107420e-02, 2.73792247306764262305e-03, 3.48310124318687889481e-04, 2.93872522892298193944e-05, 1.57909488732471646602e-06, 5.10852245077595738082e-08, 9.17858042437868695134e-10, 8.10618629746289701035e-12, 2.87860708054878815098e-14, 2.81033360275086966991e-17, 2.90825470013116013511e-21 };

constexpr double const
  * const GHxs[n_pre_comp] = { GHx1 , GHx2 , GHx3 , GHx4 , GHx5 , GHx6 , GHx7 , GHx8 , GHx9 , GHx10, GHx11, GHx12, GHx13, GHx14, GHx15, GHx16, GHx17, GHx18, GHx19, GHx20, GHx21, GHx22, GHx23, GHx24, GHx25, GHx26, GHx27, GHx28, GHx29, GHx30 },
  * const GHws[n_pre_comp] = { GHw1 , GHw2 , GHw3 , GHw4 , GHw5 , GHw6 , GHw7 , GHw8 , GHw9 , GHw10, GHw11, GHw12, GHw13, GHw14, GHw15, GHw16, GHw17, GHw18, GHw19, GHw20, GHw21, GHw22, GHw23, GHw24, GHw25, GHw26, GHw27, GHw28, GHw29, GHw30 };

HermiteData<double> GaussHermiteData(unsigned const n) {
  HermiteData<double> out(n);

  if(n <= n_pre_comp and n > 1){
    double const * const xs = GHxs[n - 1L],
                 * const ws = GHws[n - 1L];
    out.x = std::vector<double>(xs, xs + n);
    out.w = std::vector<double>(ws, ws + n);

  } else {
    // Build Gauss-Hermite integration rules
    gaussHermiteDataGolubWelsch(out.x, out.w);
  }

  return out;
}

template<class Type>
HermiteData<Type> const& GaussHermiteDataCached(unsigned const n){
  constexpr std::size_t n_cache = GaussHermiteDataCachedMaxArg();
  if(n > n_cache or n == 0l)
    throw std::invalid_argument(
        "GaussHermiteDataCached: invalid n (too large or zero)");

  static std::array<std::unique_ptr<HermiteData<Type> >, n_cache>
    cached_values;

  unsigned const idx = n - 1L;
  bool has_value = cached_values[idx].get();

  if(has_value)
    return *cached_values[idx];

#ifdef _OPENMP
#pragma omp critical (GHQCache)
{
#endif
  has_value = cached_values[idx].get();
  if(!has_value){
    std::unique_ptr<HermiteData<Type> > new_ptr(
      new HermiteData<Type>(GaussHermiteData(n)));
    std::swap(cached_values[idx], new_ptr);
  }
#ifdef _OPENMP
}
#endif

  return *cached_values[idx];
}

using ADd   = CppAD::AD<double>;
using ADdd  = CppAD::AD<CppAD::AD<double> >;
using ADddd = CppAD::AD<CppAD::AD<CppAD::AD<double> > >;

template
HermiteData<double> const& GaussHermiteDataCached(unsigned const n);
template
HermiteData<ADd   > const& GaussHermiteDataCached(unsigned const n);
template
HermiteData<ADdd  > const& GaussHermiteDataCached(unsigned const n);
template
HermiteData<ADddd > const& GaussHermiteDataCached(unsigned const n);

} // namespace GaussHermite
